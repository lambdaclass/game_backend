name: CI

on:
  pull_request:
    branches: [main]

env:
  MIX_ENV: test

permissions:
  contents: read

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: [1.15.4]
        otp: [26.0.2]
    services:
      db:
        image: postgres:15-alpine
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: dark_worlds_server_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]
          otp-version: ${{ matrix.otp }} # Define the OTP version [required]
        env:
          ImageOS: ubuntu20
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: make setup
      - name: Check Rust Formatting
        run: cargo fmt --check --manifest-path native/game_backend/Cargo.toml
      - name: Check Rust code
        run: cargo clippy --manifest-path native/game_backend/Cargo.toml -- -D warnings
      - name: Credo Elixir Check
        run: make credo
      - name: Check Elixir Formatting
        run: mix format --check-formatted
      - name: (Load Test) Check Elixir Formatting
        run: cd load_test && mix format --check-formatted
      - name: Compiles without warnings
        run: mix compile --all-warnings --warnings-as-errors
      - name: Run tests
        run: make tests
